name: Sync Upstream and Deploy to Kubernetes

on:
  schedule:
    - cron: '0 */12 * * *'  # Runs every 12 hours
  workflow_dispatch:  # Allows manual triggering

jobs:
  sync-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/Dynatrace/easytrade.git
          
      - name: Fetch from upstream
        run: |
          git fetch upstream
          
      - name: Check for changes in kubernetes-manifests/base
        id: check-k8s-changes
        run: |
          git diff --name-only upstream/main..HEAD | grep "^kubernetes-manifests/base/" && echo "changes=true" >> $GITHUB_OUTPUT || echo "changes=false" >> $GITHUB_OUTPUT
          
      - name: Merge upstream changes
        run: |
          git merge upstream/main -m "Merge upstream changes from Dynatrace/easytrade"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          
      # Only run Kubernetes steps if changes were detected in kubernetes-manifests/base
      - name: Install kubectl
        if: steps.check-k8s-changes.outputs.changes == 'true'
        uses: azure/setup-kubectl@v3
        
      - name: Set up kubeconfig
        if: steps.check-k8s-changes.outputs.changes == 'true'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
        
      - name: Apply Kubernetes configurations
        if: steps.check-k8s-changes.outputs.changes == 'true'
        run: |
          kubectl apply -k kubernetes-manifests/base/ -n easytrade
          
      - name: Verify deployment
        if: steps.check-k8s-changes.outputs.changes == 'true'
        run: |
          # Wait for deployments to be ready
          kubectl get deployments -A
          echo "Kubernetes configurations applied successfully"
